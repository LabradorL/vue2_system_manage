// 使用 key为prefix的值可以快速生成对应的代码
{
  "Print to vuePage": {
    "prefix": "vuePage",
    "body": [
    "<template>",
    "  <div class='app-container'>",
    "  </div>",
    "</template>",
    "",
    "<script>",
    "export default {",
    "  // 组件名称",
    "  name: 'Demo',",
    "  // 局部注册的组件",
    "  components: {},",
    "  // 组件状态值",
    "  data () {",
    "    return {",
    "      // 遮罩层",
    "      loading: true,",
    "      // 列表数据",
    "      tableData: [],",
    "      // 总数量",
    "      total: 0,",
    "      // 非单个禁用",
    "      single: true,",
    "      // 非多个禁用",
    "      multiple: true,",
    "      // id集合",
    "      ids: [],",
    "      // 查询参数",
    "      queryParams: {pageNum: 1,pageSize: 10}",
    "    }",
    "  },",
    "  // 计算属性",
    "  computed: {},",
    "  // 侦听器",
    "  watch: {},",
    "  created () {",
    "  },",
    "  mounted () {",
    "  },",
    "  // 方法",
    "  methods: {},",
    "  beforeDestroy () {",
    "  },",
    "  destroyed () {",
    "  }",
    "}",
    "</script> ",
    "",
    "<style lang=\"scss\" scoped>",
    "",
    "</style>",
    "$2"
         ],
    "description": " vue2 file template"
  },
  "Print to vuePageChild": {
    "prefix": "vuePageChild",
    "body": [
    "<template>",
    "  <div class=''>",
    "  </div>",
    "</template>",
    "",
    "<script>",
    "export default {",
    "  // 组件名称",
    "  name: 'ChildDemo',",
    "  // 组件参数 接收来自父组件的数据",
    "  props: {},",
    "  // 局部注册的组件",
    "  components: {},",
    "  // 组件状态值",
    "  data () {",
    "    return {}",
    "  },",
    "  // 计算属性",
    "  computed: {},",
    "  // 侦听器",
    "  watch: {},",
    "  created () {",
    "  },",
    "  mounted () {",
    "  },",
    "  // 组件方法",
    "  methods: {},",

    "  beforeDestroy () {",
    "  },",
    "  destroyed () {",
    "  }",
    "}",
    "</script> ",
    "",
    "<style lang=\"scss\" scoped>",
    "",
    "</style>",
    "$2"
         ],
    "description": " vue2 file template"
  },
  "Print to vuePageSearch": {
    "prefix": "vuePageSearch",
    "body": [
    "<template>",
    "  <div class='app-container'>",
    "    <!-- 搜索栏 -->",
    "   <el-form :model='queryParams' ref='queryForm' size='small' :inline='true' label-width='68px'>",
    "     <el-form-item label='输入框' prop='input'>",
    "       <el-input v-model='queryParams.input' placeholder='请输入XXX' clearable @keyup.enter.native='handleQuery'/>",
    "     </el-form-item>",
    "     <el-form-item label='选择框' prop='select'>",
    "       <el-select v-model='queryParams.select' placeholder='请选择XXX' clearable>",
    "         <el-option v-for='dict in dictOptions' :key='dict.dictValue' :label='dict.dictLabel' :value='dict.dictValue'></el-option>",
    "       </el-select>",
    "     </el-form-item>",
    "     <el-form-item label='时间框' prop='pickTime'>",
    "       <el-date-picker v-model='daterangeTime' value-format='yyyy-MM-dd' type='daterange' range-separator='-' start-placeholder='开始日期' end-placeholder='结束日期'></el-date-picker>",
    "     </el-form-item>",
    "     <el-form-item>",
    "       <el-button type='primary' icon='el-icon-search' size='mini' @click='handleQuery'>搜索</el-button>",
    "       <el-button icon='el-icon-refresh' size='mini' @click='resetQuery'>重置</el-button>",
    "     </el-form-item>",
    "   </el-form>",
    "",
    "   <!-- 表格数据 --> ",
    "   <el-table v-loading='loading' :data='tableData' header-row-class-name='custom-table-header-style' row-class-name='custom-table-row-style' @selection-change='handleSelectionChange'>",
    "     <el-table-column type='selection' width='55' align='center' />",
    "     <el-table-column type='index' label='序号' width='55' align='center' />",
    "     <el-table-column prop='username' label='姓名' align='left' :show-overflow-tooltip='true'>",
    "       <template slot-scope='scope'>",
    "         <span class='link-type'>可点击</span>",
    "       </template>",
    "     </el-table-column>",
    "     <el-table-column prop='longText' label='文字内容' :show-overflow-tooltip='true'/>",
    "     <el-table-column prop='time' label='时间' width='180px'>",
    "       <template slot-scope='scope'>",
    "         {{ parseTime(scope.row.time, '{y}-{m}-{d} {h}:{i}:{s}') }}",
    "       </template>",
    "     </el-table-column>",
    "     <el-table-column prop='sex' label='性别' :formatter='sexFormatter' />",
    "     <el-table-column label='操作' width='120px' class-name='small-padding fixed-width'>",
    "       <template slot-scope='scope'>",
    "         <el-button size='mini' type='text' icon='' @click='handleUpdate(scope.row)'>操作</el-button>",
    "       </template>",
    "     </el-table-column>",
    "   </el-table>",

    "  </div>",
    "</template>",
    "",
    "<script>",
    "import { getTableList } from '@/api/test'",
    "export default {",
    "  // 组件名称",
    "  name: 'Demo',",
    "  // 局部注册的组件",
    "  components: {},",
    "  // 组件状态值",
    "  data () {",
    "    return {",
    "      // 遮罩层",
    "      loading: true,",
    "      // 列表数据",
    "      tableData: [],",
    "      // 总数量",
    "      total: 0,",
    "      // 非单个禁用",
    "      single: true,",
    "      // 非多个禁用",
    "      multiple: true,",
    "      // id集合",
    "      ids: [],",
    "      // 查询参数",
    "      queryParams: {pageNum: 1,pageSize: 10},",
    "      // XXXX字典列表",
    "      dictOptions: [],",
    "      // 时间范围",
    "      daterangeTime: [],",
    "    }",
    "  },",
    "  // 计算属性",
    "  computed: {},",
    "  // 侦听器",
    "  watch: {},",
    "  created () {this.getList()},",
    "  mounted () {",
    "  },",
    "  // 方法",
    "  methods: {",
    "    /** 查询XXXX列表 */",
    "    getList() {",
    "      this.loading = true",
    "      getTableList(this.queryParams).then(response => {",
    "        this.tableData = response.rows || [] ",
    "        this.total = response.total || 0",
    "        this.loading = false",
    "      });",
    "    },",
    "    /** 搜索按钮操作 */",
    "    handleQuery() {",
    "      this.queryParams.pageNum = 1",
    "      this.getList()",
    "    },",
    "    /** 重置按钮操作 */",
    "    resetQuery() {",
    "      this.daterangeTime = []",
    "      this.resetForm('queryForm')",
    "      this.handleQuery()",
    "    },",

    "    /** XXX字典翻译 */",
    "    sexFormatter(row) {",
    "      if (row.sex) {",
    "       return this.selectDictLabel(this.dictOptions, row.sex)",
    "      }",
    "      return '--'",
    "    },",
    "    /** 多选框选中数据 */",
    "    handleSelectionChange(selection) {",
    "      this.ids = selection.map(item => item.id)",
    "      this.single = selection.length!==1",
    "      this.multiple = !selection.length",
    "    },",
    "    /** 操作列函数处理 */",
    "    handleUpdate(row) {",
    "      console.log('操作列函数')",
    "    },",


    "},",
    "  beforeDestroy () {",
    "  },",
    "  destroyed () {",
    "  }",
    "}",
    "</script> ",
    "",
    "<style lang=\"scss\" scoped>",
    "",
    "</style>",
    "$2"
         ],
    "description": " 带有搜索的模板"
  }

}
